plugins {
    id 'java'
    id 'maven-publish'
    id 'signing'
}

apply from: 'publish-info.gradle'

ext {
    projectEncoding = 'UTF-8'
}

// Util Group
group'kr.devis.util'
version PUBLISH_VERSION
java.sourceCompatibility = JavaVersion.VERSION_1_8

repositories {
    mavenCentral()
}

java {
    withSourcesJar()
    withJavadocJar()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = PUBLISH_ARTIFACT_ID
            from components.java
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
            pom {
                name = PUBLISH_ARTIFACT_ID
                description = PUBLISH_DESCRIPTION
                url = PUBLISH_URL
                groupId = PUBLISH_GROUP_ID
                artifactId = PUBLISH_ARTIFACT_ID
                version = PUBLISH_VERSION

//                properties = []
                licenses {
                    license {
                        name = PUBLISH_LICENSE_NAME
                        url = PUBLISH_LICENSE_URL
                    }
                }
                developers {
                    developer {
                        id = PUBLISH_DEVELOPER_ID
                        name = PUBLISH_DEVELOPER_NAME
                        email = PUBLISH_DEVELOPER_EMAIL
                    }
                }
                scm {
                    connection = PUBLISH_SCM_CONNECTION
                    developerConnection = PUBLISH_SCM_DEVELOPER_CONNECTION
                    url = PUBLISH_SCM_URL
                }
            }
        }
    }
    repositories {
        maven {
            credentials {
                username = System.getenv("OSSRH_USERNAME")
                password = System.getenv("OSSRH_PASSWORD")
            }
            def snapshotsRepoUrl = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
            def releasesRepoUrl = "https://s01.oss.sonatype.org/service/local/"

            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
        }
    }
}


signing {
    keyId = System.getEnv("GPG_KEY_ID")
    password = System.getenv("GPG_KEY_PASSWORD")
    secretKeyRingFile = file(new String(System.getenv("GPG_KEY_RING_FILE").decodeBase64()))
    sign publishing.publications.mavenJava
}

javadoc {
    if (JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}

// 컴파일 인코딩 설정
[compileJava, compileTestJava]*.options*.encoding = "$projectEncoding"

// https://docs.gradle.org/current/userguide/publishing_setup.html#publishing_overview 참고
// ':signMavenJavaPublication' because it has no configured signatory: 키서버에 키가 없음